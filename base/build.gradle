apply plugin: 'com.android.library'

android {

    resourcePrefix project.getName() + "_"
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation "junit:junit:${rootProject.ext.junitVersion}"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    api 'androidx.appcompat:appcompat:1.2.0'


    //Arouter
//    api 'com.alibaba:arouter-api:' + rootProject.ext.arouterApiVersion
//    annotationProcessor 'com.alibaba:' + rootProject.ext.arouterCompilerVersion

    api 'com.github.pinguo-zhouwei:CircleIndicatorView:v1.0.1'
    //自定义注解测试
    api project(':simple-test-annotations')
    annotationProcessor project(':simple-test-compiler')

    api 'com.trello.rxlifecycle4:rxlifecycle:4.0.0'
// If you want to bind to Android-specific lifecycles
    api 'com.trello.rxlifecycle4:rxlifecycle-android:4.0.0'
// If you want pre-written Activities and Fragments you can subclass as providers
    api 'com.trello.rxlifecycle4:rxlifecycle-components:4.0.0'
}
